plugins {
    id 'java'
    id 'maven-publish'
    alias(libs.plugins.enonic.defaults)
    alias(libs.plugins.enonic.xp.app)
    alias(libs.plugins.node.gradle)
}

apply from: "$rootDir/gradle/env.gradle"
apply from: "$rootDir/gradle/lib-admin.gradle"
apply from: "$rootDir/gradle/lib-contentstudio.gradle"
apply from: "$rootDir/gradle/node.gradle"

subprojects {
    apply plugin: 'java'
    apply plugin: 'com.enonic.defaults'
    apply plugin: 'com.enonic.xp.base'
    apply from: "$rootDir/gradle/env.gradle"
    apply from: "$rootDir/gradle/node.gradle"
    apply from: "$rootDir/gradle/lib-admin.gradle"

    java {
        toolchain {
            languageVersion = JavaLanguageVersion.of(21)
        }

        sourceCompatibility = JavaVersion.VERSION_21
        targetCompatibility = sourceCompatibility
    }

    repositories {
        mavenLocal()
        mavenCentral()
        xp.enonicRepo('dev')
    }
}

configurations {
    devResources {
        attributes {
            attribute(LibraryElements.LIBRARY_ELEMENTS_ATTRIBUTE, objects.named(LibraryElements, 'dev-resources'))
        }
    }
}

app {
    name = 'com.enonic.app.contentstudio.plus'
    displayName = 'Content Studio +'
    vendorName = 'Enonic AS'
    vendorUrl = 'https://enonic.com'
    systemVersion = "${xpVersion}"
    devSourcePaths += file("$rootDir/../lib-admin-ui/src/main/resources")
    devSourcePaths += file("$rootDir/../app-contentstudio/modules/lib/src/main/resources")
}

dependencies {
    implementation "com.enonic.xp:core-api:${xpVersion}"
    include "com.enonic.xp:lib-admin:${xpVersion}"
    include "com.enonic.xp:lib-auth:${xpVersion}"
    include "com.enonic.xp:lib-content:${xpVersion}"
    include "com.enonic.xp:lib-context:${xpVersion}"
    include "com.enonic.xp:lib-i18n:${xpVersion}"
    include "com.enonic.xp:lib-io:${xpVersion}"
    include "com.enonic.xp:lib-portal:${xpVersion}"
    include libs.lib.mustache
    include libs.lib.license

    include "com.enonic.lib:lib-admin-ui:${libAdminUiVersion}"
    include "com.enonic.lib:lib-contentstudio:${libContentStudioVersion}"

    devResources "com.enonic.lib:lib-admin-ui:${libAdminUiVersion}"
    devResources "com.enonic.lib:lib-contentstudio:${libContentStudioVersion}"
}

repositories {
    mavenLocal()
    mavenCentral()
    xp.enonicRepo('dev')
}

tasks.register('lint', PnpmTask) {
    dependsOn tasks.named('pnpmInstall')
    args = [ 'run', 'lint:quiet' ]
    inputs.files fileTree( dir: 'modules', include: '**/src/main/**.*' )
    outputs.dir file('gradle')
    outputs.upToDateWhen { false }
}

tasks.named('check').configure {
    // dependsOn tasks.named('typecheck')
    dependsOn tasks.named('lint')
}

tasks.register('webpack', PnpmTask) {
    dependsOn tasks.named('pnpmInstall')
    dependsOn tasks.named('javadoc')
    description = 'Build UI resources (ts, css, etc).'
    args = [ 'run', 'build' ]
    inputs.dir '.xp/dev'
    inputs.dir 'src/main'
    inputs.file 'webpack.config.js'
    outputs.dir "${buildDir}/resources/main"
}

tasks.named('jar').configure {
    exclude 'assets/**/*.ts'
    exclude 'assets/**/*.less'
    exclude 'assets/img/**'
    exclude 'assets/styles/html-editor.*'
    exclude 'assets/styles/contentlib.*'

    dependsOn tasks.named('webpack')
}
